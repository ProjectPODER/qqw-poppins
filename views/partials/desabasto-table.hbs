<section class="profile" id="desabasto-reportado">
  <div class="profile-content">
    <div class="row">
      <div class="box-title-section">
        <div class="box-title-icon">
          <i class="fas fa-times"></i>
        </div>
        <h4 class="description-data-subtitle">{{{_ "DESABASTO REPORTADO"}}}</h4>
      </div>
      <div class="col-12 col-md-12">
        <p>{{{_ "Con datos de Cero Desabasto, que es un colectivo impulsado por Nosotrxs que reúne a pacientes,
          familiares de pacientes, médicos, organizaciones, académicos y autoridades para lograr el acceso efectivo a
          medicamentos e insumos médicos con el fin de garantizar el derecho a la salud."}}}</p>
        <div class="table-responsive">
          <table width="100%" id="desabasto-table" class="table row-border" style="display: none;">
            <thead>
              <tr>
                <th>{{{_ "FECHA"}}}</th>
                <th>{{{_ "ESTADO"}}}</th>
                <th>{{{_ "INSTITUCIÓN"}}}</th>
                <th>{{{_ "NOMBRE DEL HOSPITAL"}}}</th>
              </tr>
            </thead>
          </table>
        </div>
        <div id="desabasto-loading">
          Cargando....
        </div>
        <div id="desabasto-empty" style="display: none;">
          No existen reportes de desabasto...
        </div>
        <div id="desabasto-show" RICARDO style="display: default;">
          <svg id="grafica-desabasto"></svg>

        </div>
      </div>
    </div>
  </div>
</section>
<script type="text/javascript">

  //Events
  window.addEventListener('load', function () {
    if ("{{result.classification}}" == "institution") {
      campo = "clues"
      valor = "" //TODO: Add CLUES
    }
    else {
      campo = "clave";
      valor = "{{result.id}}";
      //valor = "key";
    }
    getDesabasto(valor,campo)
  })


  function getDesabasto(clave) {

    console.log("Consultando reportes de desabasto", valor, campo)
    //RICARDO acá forcé "clave"
    let reports_url = "https://api.yeeko.org/api-rest/desabasto/reports/?"+"clave"+"=" + clave + "&format=json";
    $.get(reports_url, function (data) {
      console.log("Respuesta reportes de desabasto", data);
      if (data.count == 0) {
        $("#desabasto-loading").hide();
        $("#desabasto-empty").show();
        $("#desabasto-table").hide();
      }
      else {
        $("#desabasto-loading").hide();
        $("#desabasto-show").show();
        $("#desabasto-table").show();
        initDesabasto(data.data);

      }
    })
  }
  function initDesabasto(data) {

    let width = 599;
    let height = 300;

    let svg = d4.select("#grafica-desabasto")

    //svg.attr("viewBox", [0, 0, width, height]);



    //var vm = this

    let color = d4.interpolateHsl(
        d4.rgb('#607D8B').brighter(1.2), d4.rgb('#607D8B').darker(1) )

    var margin = {top: 10, right: 10, bottom: 30, left: 25},
      width2 = 600 ,
      height2 = 220 ;

    //let range_x = d4.extent(data, d=> d.created)

    //data = data.sort((a, b)=> a.id - b.id);

    let accumulator = 0;
    let data_chart = data.map(item=>{
      let date = new Date(item.created)
      let month = date.getMonth() + (date.getYear() * 12)
      let exact = date.getMonth() + (date.getYear() * 12) 
        + ( date.getDay() / 31)
      accumulator++
      return { ...item, 
        ...{ month: month, month_exact: exact, y_cumulative: accumulator } }
    })
    //let range_x = d4.extent(data_chart, d=> d.month)
    //let max_x = d4.max(data_chart, d=> d.month) + 1
    let now = new Date()
    let max_x = (now.getYear() * 12 + now.getMonth() )
    let range_x = [1430, max_x]
    let ticks_x = max_x - 1430

    var x = d4.scaleLinear()
      .domain(range_x)
      .range([margin.left, width2 - margin.right]);

    //const is_empty = d4.select("#histogram > svg > g").empty()
    const is_empty = true


    var histogram = d4.histogram()
      .value(d => d.month )
      //.value(d => d.created )
      .domain(x.domain())
      .thresholds(x.ticks(ticks_x));

    svg
      .attr("viewBox", [-20, 5, 
          width2 + 0 + margin.right + margin.left, 
          height2 + 10 + margin.bottom+margin.top])
      .append("g")
        .attr("transform",
              "translate(" + margin.left + "," + margin.top + ")");

    let formatX = (e) => {
      return e%3 
        ? ''
        : `${(e%12)+1}/${Math.floor(e/12)-100}`
    }
    svg.append("g")
      .attr("transform", `translate(0,${height2})`)
      .call(d4.axisBottom(x).tickFormat(formatX).ticks(ticks_x))
        .selectAll("text")
        //.attr("transform", "rotate(70)")
        //.style("text-anchor", "start")
        //.attr("dx", "1em")
        //.attr("dy", "-.3em")


    var bins = histogram(data_chart);
    //console.log(ises)
    //console.log(bins)

    const transition1 = svg.transition()
      .duration(1500);
    

    var max_y = d4.max(bins, d => d.length + 2)
    var y = d4.scaleLinear()
      .domain([0, max_y])
      .range([height2, margin.bottom])
      
    //let ticks_y = d4.max(bins, d=> d.length)
    let yAxis = (g) =>{
      g
        .attr("class", "y-axis")
        .call(d4.axisLeft(y).ticks(10))
    } 

    svg.append("g")
      .attr("transform", d => `translate(${margin.left}, 0)`)
      .call(yAxis)

    var rects = svg.selectAll("rect")
      .data(bins)
      .enter()
      //.filter(d=> d.length)    
        .append('rect')
        .attr("width", d => x(d.x1) - x(d.x0))
        .attr("x", 1)
        //.style("fill", (d,i)=> color((i)/10))//"#00b0ff")
        .style("fill", "#00b0ff")
        //.attr("transform", d => `translate(${x(d.x0)},${y(0)})`)
        //.attr("transform", d => `translate(${x(d.x0)},${y(d.length)})`)
        .attr("transform", d => `translate(${x(d.x0-0.5)}, ${y(d.length)})`)
        .attr("height", d=> height2 - y(d.length));

    var legends = svg.selectAll(".legend")
      .data(bins)
      .enter()
        .append('text')
        .attr("class", "legend")
        .text(d=> d.length)
        .style("text-anchor", "middle")
        .style("fill", "grey")
        .attr("opacity", d=> d.length ? 1 : 0)
        //.attr("transform", d => `translate(${x(d.x0+.25)}, ${y(0)})`)
        .attr("transform", d => `translate(${x(d.x0)}, ${y(d.length+.2)})`)
  
    
    svg.append("text")
      .attr("class", "x label")
      .attr("text-anchor", "end")
      .attr("x", width2)
      .attr("font-size", "11px")
      .attr("y", height2 + margin.bottom)
      .text("Mes del reporte");

    svg.append("text")
      .attr("class", "y label")
      .attr("text-anchor", "end")
      .attr("x", -25)
      .attr("y", -20)
      .attr("dy", "1em")
      .attr("font-size", "11px")
      .attr("transform", "rotate(-90)")
      .text("Número de reportes");



    let data_cumul = [
      { month_exact: 1430, y_cumulative: 0 }, 
      ...data_chart, 
      { month_exact: max_x, y_cumulative: data_chart.length }, 
    ]

    var y_cumul = d4.scaleLinear()
      .domain([0, data.length + 2])
      .range([height2, margin.bottom])

    let curve = d4.curveLinear;

    let area = d4.area()
      .curve(curve)
      .x(d => x(d.month_exact))
      .y0(y(0))
      .y1(d => y_cumul(d.y_cumulative));

    const path = svg.append("path")
        .datum(data_cumul)
        .attr("fill", "#8242a8")
        .attr("opacity", "0.4")
        .attr("d", area);


    let yAxisCum = (g) =>{
      g
        .attr("class", "y-axis")
        .call(d4.axisLeft(y_cumul).ticks(10))
    } 

    svg.append("g")
      .attr("transform", d => `translate(${margin.left + 40}, 0)`)
      .call(yAxisCum)


      console.log(data_chart)

    // Desabasto table
    $('#desabasto-table').DataTable({
      data: data,
      responsive: true,
      columns: [
        { "data": "created", render: function (data) {
            let date = new Date(data)
            return date.getDate() + "/" + (date.getMonth()+1) + "/" + date.getFullYear()
          }
        },
        { "data": "state.name" },
        { "data": "institution.name" },
        { "data": "hospital_name_raw", render: function (data) {
          if (data.length < 1) {
            return "(no reportado)"
          } else {
            return data
          }
        }}
      ],
      language: datatablesLang,
      "order": [[0, 'desc']]
    });
  }
</script>